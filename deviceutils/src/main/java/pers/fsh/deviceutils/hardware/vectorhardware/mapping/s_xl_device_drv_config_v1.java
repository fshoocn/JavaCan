package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_device_drv_config_v1 extends Structure {
    /**
     * !< NULL terminated UTF-8 encoded string<br>
     * C type : const char*
     */
    public Pointer name;
    /**
     * !< HWTYPE_xxxx (see above)
     */
    public int hwType;
    /**
     * !< Index of the hardware (same type) (0,1,...)
     */
    public int hwIndex;
    public int serialNumber;
    public int articleNumber;
    /**
     * !< version of the driver<br>
     * C type : XLuint64
     */
    public long driverVersion;
    /**
     * !< XL_CONNECTION_INFO_XXX
     */
    public int connectionInfo;
    /**
     * !< indicates a device of the remote driver config
     */
    public int isRemoteDevice;
    /**
     * C type : remoteDeviceList_struct
     */
    public remoteDeviceList_struct remoteDeviceList;
    /**
     * !< device channel list<br>
     * C type : XLchannelDrvConfigListV1
     */
    public s_channel_drv_config_list_v1 channelList;

    public s_xl_device_drv_config_v1() {
        super(8);
    }

    ;

    protected List<String> getFieldOrder() {
        return Arrays.asList("name", "hwType", "hwIndex", "serialNumber", "articleNumber", "driverVersion", "connectionInfo", "isRemoteDevice", "remoteDeviceList", "channelList");
    }

    /**
     * <i>native declaration : vxlapi.h:56</i>
     */
    public static class remoteDeviceList_struct extends Structure {
        /**
         * C type : s_xl_device_drv_config_v1*
         */
        public s_xl_device_drv_config_v1.ByReference item;
        public int count;

        public remoteDeviceList_struct() {
            super(8);
        }

        /**
         * @param item C type : s_xl_device_drv_config_v1*
         */
        public remoteDeviceList_struct(s_xl_device_drv_config_v1.ByReference item, int count) {
            super(8);
            this.item = item;
            this.count = count;
        }

        protected List<String> getFieldOrder() {
            return Arrays.asList("item", "count");
        }

        public static class ByReference extends remoteDeviceList_struct implements Structure.ByReference {

        }

        ;

        public static class ByValue extends remoteDeviceList_struct implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends s_xl_device_drv_config_v1 implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_device_drv_config_v1 implements Structure.ByValue {

    }

    ;
}
