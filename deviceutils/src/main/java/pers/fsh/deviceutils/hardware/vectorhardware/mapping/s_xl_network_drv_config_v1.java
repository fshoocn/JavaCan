package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_network_drv_config_v1 extends Structure {
    /**
     * !< name of the network, NULL terminated UTF-8 encoded string<br>
     * C type : const char*
     */
    public Pointer networkName;
    /**
     * !< network configuration error XL_NET_CFG_*
     */
    public int statusCode;
    /**
     * !< NULL terminated UTF-8 encoded string that describes statusCode. NULL if no error string exists.<br>
     * C type : const char*
     */
    public Pointer statusErrorString;
    /**
     * @see XLnetworkType<br>
     * !< XL_ETH_NETWORK<br>
     * C type : XLnetworkType
     */
    public int networkType;
    /**
     * C type : XLswitchDrvConfigListV1
     */
    public s_switch_drv_config_list_v1 switchList;

    public s_xl_network_drv_config_v1() {
        super(8);
    }

    /**
     * @param networkName       !< name of the network, NULL terminated UTF-8 encoded string<br>
     *                          C type : const char*<br>
     * @param statusCode        !< network configuration error XL_NET_CFG_*<br>
     * @param statusErrorString !< NULL terminated UTF-8 encoded string that describes statusCode. NULL if no error string exists.<br>
     *                          C type : const char*<br>
     * @param networkType       @see XLnetworkType<br>
     *                          !< XL_ETH_NETWORK<br>
     *                          C type : XLnetworkType<br>
     * @param switchList        C type : XLswitchDrvConfigListV1
     */
    public s_xl_network_drv_config_v1(Pointer networkName, int statusCode, Pointer statusErrorString, int networkType, s_switch_drv_config_list_v1 switchList) {
        super(8);
        this.networkName = networkName;
        this.statusCode = statusCode;
        this.statusErrorString = statusErrorString;
        this.networkType = networkType;
        this.switchList = switchList;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("networkName", "statusCode", "statusErrorString", "networkType", "switchList");
    }

    public static class ByReference extends s_xl_network_drv_config_v1 implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_network_drv_config_v1 implements Structure.ByValue {

    }

    ;
}
