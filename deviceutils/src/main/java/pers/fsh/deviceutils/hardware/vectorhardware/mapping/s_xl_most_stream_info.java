package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most_stream_info extends Structure {
    public int streamHandle;
    public int numSyncChannels;
    public int direction;
    public int options;
    public int latency;
    public int streamState;
    public int reserved;
    /**
     * C type : unsigned char[60]
     */
    public byte[] syncChannels = new byte[60];

    public s_xl_most_stream_info() {
        super(8);
    }

    /**
     * @param syncChannels C type : unsigned char[60]
     */
    public s_xl_most_stream_info(int streamHandle, int numSyncChannels, int direction, int options, int latency, int streamState, int reserved, byte syncChannels[]) {
        super(8);
        this.streamHandle = streamHandle;
        this.numSyncChannels = numSyncChannels;
        this.direction = direction;
        this.options = options;
        this.latency = latency;
        this.streamState = streamState;
        this.reserved = reserved;
        if ((syncChannels.length != this.syncChannels.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.syncChannels = syncChannels;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("streamHandle", "numSyncChannels", "direction", "options", "latency", "streamState", "reserved", "syncChannels");
    }

    public static class ByReference extends s_xl_most_stream_info implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most_stream_info implements Structure.ByValue {

    }

    ;
}
