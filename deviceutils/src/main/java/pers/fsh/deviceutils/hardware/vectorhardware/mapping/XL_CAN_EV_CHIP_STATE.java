package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class XL_CAN_EV_CHIP_STATE extends Structure {
    public byte busStatus;
    public byte txErrorCounter;
    public byte rxErrorCounter;
    public byte reserved;
    public int reserved0;

    public XL_CAN_EV_CHIP_STATE() {
        super(8);
    }

    public XL_CAN_EV_CHIP_STATE(byte busStatus, byte txErrorCounter, byte rxErrorCounter, byte reserved, int reserved0) {
        super(8);
        this.busStatus = busStatus;
        this.txErrorCounter = txErrorCounter;
        this.rxErrorCounter = rxErrorCounter;
        this.reserved = reserved;
        this.reserved0 = reserved0;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("busStatus", "txErrorCounter", "rxErrorCounter", "reserved", "reserved0");
    }

    public static class ByReference extends XL_CAN_EV_CHIP_STATE implements Structure.ByReference {

    }

    ;

    public static class ByValue extends XL_CAN_EV_CHIP_STATE implements Structure.ByValue {

    }

    ;
}
