package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most150_special_node_info extends Structure {
    public int changeMask;
    public short nodeAddress;
    public short groupAddress;
    public byte npr;
    public byte mpr;
    public byte sbc;
    public byte ctrlRetryTime;
    public byte ctrlSendAttempts;
    public byte asyncRetryTime;
    public byte asyncSendAttempts;
    /**
     * C type : unsigned char[6]
     */
    public byte[] macAddr = new byte[6];
    public byte nprSpy;
    public byte mprSpy;
    public byte sbcSpy;
    public byte inicNIState;
    /**
     * C type : unsigned char[3]
     */
    public byte[] reserved1 = new byte[3];
    /**
     * C type : unsigned int[3]
     */
    public int[] reserved2 = new int[3];

    public s_xl_most150_special_node_info() {
        super(1);
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("changeMask", "nodeAddress", "groupAddress", "npr", "mpr", "sbc", "ctrlRetryTime", "ctrlSendAttempts", "asyncRetryTime", "asyncSendAttempts", "macAddr", "nprSpy", "mprSpy", "sbcSpy", "inicNIState", "reserved1", "reserved2");
    }

    public static class ByReference extends s_xl_most150_special_node_info implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most150_special_node_info implements Structure.ByValue {

    }

    ;
}
