package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;
import com.sun.jna.Union;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most150_async_busload_config extends Structure {
    public int busloadType;
    public int transmissionRate;
    public int counterType;
    public int counterPosition;
    /**
     * C type : busloadPkt_union
     */
    public busloadPkt_union busloadPkt;

    public s_xl_most150_async_busload_config() {
        super(1);
    }

    ;

    /**
     * @param busloadPkt C type : busloadPkt_union
     */
    public s_xl_most150_async_busload_config(int busloadType, int transmissionRate, int counterType, int counterPosition, busloadPkt_union busloadPkt) {
        super(1);
        this.busloadType = busloadType;
        this.transmissionRate = transmissionRate;
        this.counterType = counterType;
        this.counterPosition = counterPosition;
        this.busloadPkt = busloadPkt;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("busloadType", "transmissionRate", "counterType", "counterPosition", "busloadPkt");
    }

    /**
     * <i>native declaration : vxlapi.h:457</i>
     */
    public static class busloadPkt_union extends Union {
        /**
         * C type : unsigned char[1540]
         */
        public byte[] rawBusloadPkt = new byte[1540];
        /**
         * C type : XLmost150AsyncTxMsg
         */
        public s_xl_most150_async_tx_msg busloadAsyncPkt;
        /**
         * C type : XLmost150EthernetTxMsg
         */
        public s_xl_most150_ethernet_tx_msg busloadEthernetPkt;

        public busloadPkt_union() {
            super();
        }

        /**
         * @param rawBusloadPkt C type : unsigned char[1540]
         */
        public busloadPkt_union(byte rawBusloadPkt[]) {
            super();
            if ((rawBusloadPkt.length != this.rawBusloadPkt.length))
                throw new IllegalArgumentException("Wrong array size !");
            this.rawBusloadPkt = rawBusloadPkt;
            setType(byte[].class);
        }

        /**
         * @param busloadAsyncPkt C type : XLmost150AsyncTxMsg
         */
        public busloadPkt_union(s_xl_most150_async_tx_msg busloadAsyncPkt) {
            super();
            this.busloadAsyncPkt = busloadAsyncPkt;
            setType(s_xl_most150_async_tx_msg.class);
        }

        /**
         * @param busloadEthernetPkt C type : XLmost150EthernetTxMsg
         */
        public busloadPkt_union(s_xl_most150_ethernet_tx_msg busloadEthernetPkt) {
            super();
            this.busloadEthernetPkt = busloadEthernetPkt;
            setType(s_xl_most150_ethernet_tx_msg.class);
        }

        public static class ByReference extends busloadPkt_union implements Structure.ByReference {

        }

        ;

        public static class ByValue extends busloadPkt_union implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends s_xl_most150_async_busload_config implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most150_async_busload_config implements Structure.ByValue {

    }

    ;
}
