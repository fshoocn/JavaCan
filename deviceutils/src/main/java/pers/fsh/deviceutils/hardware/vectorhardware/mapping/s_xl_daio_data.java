package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * 32 Bytes<br>
 * <i>native declaration : vxlapi.h:133</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_daio_data extends Structure {
    /**
     * 2
     */
    public short flags;
    /**
     * 4
     */
    public int timestamp_correction;
    /**
     * 1
     */
    public byte mask_digital;
    /**
     * 1
     */
    public byte value_digital;
    /**
     * 1
     */
    public byte mask_analog;
    /**
     * 1
     */
    public byte reserved0;
    /**
     * 8<br>
     * C type : unsigned short[4]
     */
    public short[] value_analog = new short[4];
    /**
     * 4
     */
    public int pwm_frequency;
    /**
     * 2
     */
    public short pwm_value;
    /**
     * 4
     */
    public int reserved1;
    /**
     * 4
     */
    public int reserved2;

    public s_xl_daio_data() {
        super(1);
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("flags", "timestamp_correction", "mask_digital", "value_digital", "mask_analog", "reserved0", "value_analog", "pwm_frequency", "pwm_value", "reserved1", "reserved2");
    }

    public static class ByReference extends s_xl_daio_data implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_daio_data implements Structure.ByValue {

    }

    ;
}
