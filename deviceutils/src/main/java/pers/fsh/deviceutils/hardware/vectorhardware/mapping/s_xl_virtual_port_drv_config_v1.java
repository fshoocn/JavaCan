package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_virtual_port_drv_config_v1 extends Structure {
    /**
     * !< name of the virtual port, NULL terminated UTF-8 encoded string<br>
     * C type : const char*
     */
    public Pointer virtualPortName;
    /**
     * !< the index of the network in the network list this vp belongs to
     */
    public int networkIdx;
    /**
     * !< ID of the switch in the network - switches in different networks may have the same switch ID<br>
     * C type : XLswitchId
     */
    public int switchId;

    public s_xl_virtual_port_drv_config_v1() {
        super(8);
    }

    /**
     * @param virtualPortName !< name of the virtual port, NULL terminated UTF-8 encoded string<br>
     *                        C type : const char*<br>
     * @param networkIdx      !< the index of the network in the network list this vp belongs to<br>
     * @param switchId        !< ID of the switch in the network - switches in different networks may have the same switch ID<br>
     *                        C type : XLswitchId
     */
    public s_xl_virtual_port_drv_config_v1(Pointer virtualPortName, int networkIdx, int switchId) {
        super(8);
        this.virtualPortName = virtualPortName;
        this.networkIdx = networkIdx;
        this.switchId = switchId;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("virtualPortName", "networkIdx", "switchId");
    }

    public static class ByReference extends s_xl_virtual_port_drv_config_v1 implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_virtual_port_drv_config_v1 implements Structure.ByValue {

    }

    ;
}
