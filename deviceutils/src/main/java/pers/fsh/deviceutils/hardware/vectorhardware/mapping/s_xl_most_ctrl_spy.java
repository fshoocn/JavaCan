package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most_ctrl_spy extends Structure {
    public int arbitration;
    public short targetAddress;
    public short sourceAddress;
    public byte ctrlType;
    /**
     * C type : unsigned char[17]
     */
    public byte[] ctrlData = new byte[17];
    public short crc;
    public short txStatus;
    public short ctrlRes;
    public int spyRxStatus;

    public s_xl_most_ctrl_spy() {
        super(8);
    }

    /**
     * @param ctrlData C type : unsigned char[17]
     */
    public s_xl_most_ctrl_spy(int arbitration, short targetAddress, short sourceAddress, byte ctrlType, byte ctrlData[], short crc, short txStatus, short ctrlRes, int spyRxStatus) {
        super(8);
        this.arbitration = arbitration;
        this.targetAddress = targetAddress;
        this.sourceAddress = sourceAddress;
        this.ctrlType = ctrlType;
        if ((ctrlData.length != this.ctrlData.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.ctrlData = ctrlData;
        this.crc = crc;
        this.txStatus = txStatus;
        this.ctrlRes = ctrlRes;
        this.spyRxStatus = spyRxStatus;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("arbitration", "targetAddress", "sourceAddress", "ctrlType", "ctrlData", "crc", "txStatus", "ctrlRes", "spyRxStatus");
    }

    public static class ByReference extends s_xl_most_ctrl_spy implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most_ctrl_spy implements Structure.ByValue {

    }

    ;
}
