package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;
import com.sun.jna.Union;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_event_most150 extends Structure {
    /**
     * 4 - overall size of the complete event
     */
    public int size;
    /**
     * 2 - type of the event<br>
     * C type : XLmostEventTag
     */
    public short tag;
    /**
     * 2
     */
    public short channelIndex;
    /**
     * 4
     */
    public int userHandle;
    /**
     * 2
     */
    public short flagsChip;
    /**
     * 2
     */
    public short reserved;
    /**
     * 8 - raw timestamp<br>
     * C type : XLuint64
     */
    public long timeStamp;
    /**
     * 8 - timestamp which is synchronized by the driver<br>
     * C type : XLuint64
     */
    public long timeStampSync;
    /**
     * C type : tagData_union
     */
    public tagData_union tagData;

    public s_xl_event_most150() {
        super(1);
    }

    ;

    /**
     * @param size          4 - overall size of the complete event<br>
     * @param tag           2 - type of the event<br>
     *                      C type : XLmostEventTag<br>
     * @param channelIndex  2<br>
     * @param userHandle    4<br>
     * @param flagsChip     2<br>
     * @param reserved      2<br>
     * @param timeStamp     8 - raw timestamp<br>
     *                      C type : XLuint64<br>
     * @param timeStampSync 8 - timestamp which is synchronized by the driver<br>
     *                      C type : XLuint64<br>
     * @param tagData       C type : tagData_union
     */
    public s_xl_event_most150(int size, short tag, short channelIndex, int userHandle, short flagsChip, short reserved, long timeStamp, long timeStampSync, tagData_union tagData) {
        super(1);
        this.size = size;
        this.tag = tag;
        this.channelIndex = channelIndex;
        this.userHandle = userHandle;
        this.flagsChip = flagsChip;
        this.reserved = reserved;
        this.timeStamp = timeStamp;
        this.timeStampSync = timeStampSync;
        this.tagData = tagData;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("size", "tag", "channelIndex", "userHandle", "flagsChip", "reserved", "timeStamp", "timeStampSync", "tagData");
    }

    /**
     * <i>native declaration : vxlapi.h:328</i>
     */
    public static class tagData_union extends Union {
        /**
         * C type : unsigned char[(unsigned int)2048]
         */
        public byte[] rawData = new byte[2048];
        /**
         * C type : XL_MOST150_EVENT_SOURCE_EV
         */
        public s_xl_most150_event_source mostEventSource;
        /**
         * C type : XL_MOST150_DEVICE_MODE_EV
         */
        public s_xl_most150_device_mode mostDeviceMode;
        /**
         * C type : XL_MOST150_FREQUENCY_EV
         */
        public s_xl_most150_frequency mostFrequency;
        /**
         * C type : XL_MOST150_SPECIAL_NODE_INFO_EV
         */
        public s_xl_most150_special_node_info mostSpecialNodeInfo;
        /**
         * C type : XL_MOST150_CTRL_RX_EV
         */
        public s_xl_most150_ctrl_rx mostCtrlRx;
        /**
         * C type : XL_MOST150_CTRL_TX_ACK_EV
         */
        public s_xl_most150_ctrl_tx_ack mostCtrlTxAck;
        /**
         * C type : XL_MOST150_ASYNC_SPY_EV
         */
        public s_xl_most150_async_spy_msg mostAsyncSpy;
        /**
         * C type : XL_MOST150_ASYNC_RX_EV
         */
        public s_xl_most150_async_rx_msg mostAsyncRx;
        /**
         * C type : XL_MOST150_SYNC_ALLOC_INFO_EV
         */
        public s_xl_most150_sync_alloc_info mostSyncAllocInfo;
        /**
         * C type : XL_MOST150_SYNC_VOLUME_STATUS_EV
         */
        public s_xl_most150_sync_volume_status mostSyncVolumeStatus;
        /**
         * C type : XL_MOST150_TX_LIGHT_EV
         */
        public s_xl_most150_tx_light mostTxLight;
        /**
         * C type : XL_MOST150_RXLIGHT_LOCKSTATUS_EV
         */
        public s_xl_most150_rx_light_lock_status mostRxLightLockStatus;
        /**
         * C type : XL_MOST150_ERROR_EV
         */
        public s_xl_most150_error mostError;
        /**
         * C type : XL_MOST150_CONFIGURE_RX_BUFFER_EV
         */
        public s_xl_most150_configure_rx_buffer mostConfigureRxBuffer;
        /**
         * C type : XL_MOST150_CTRL_SYNC_AUDIO_EV
         */
        public s_xl_most150_ctrl_sync_audio mostCtrlSyncAudio;
        /**
         * C type : XL_MOST150_SYNC_MUTE_STATUS_EV
         */
        public s_xl_most150_sync_mute_status mostSyncMuteStatus;
        /**
         * C type : XL_MOST150_LIGHT_POWER_EV
         */
        public s_xl_most150_tx_light_power mostLightPower;
        /**
         * C type : XL_MOST150_GEN_LIGHT_ERROR_EV
         */
        public s_xl_most150_gen_light_error mostGenLightError;
        /**
         * C type : XL_MOST150_GEN_LOCK_ERROR_EV
         */
        public s_xl_most150_gen_lock_error mostGenLockError;
        /**
         * C type : XL_MOST150_CTRL_BUSLOAD_EV
         */
        public s_xl_most150_ctrl_busload mostCtrlBusload;
        /**
         * C type : XL_MOST150_ASYNC_BUSLOAD_EV
         */
        public s_xl_most150_async_busload mostAsyncBusload;
        /**
         * C type : XL_MOST150_ETHERNET_RX_EV
         */
        public s_xl_most150_ethernet_rx mostEthernetRx;
        /**
         * C type : XL_MOST150_SYSTEMLOCK_FLAG_EV
         */
        public s_xl_most150_systemlock_flag mostSystemLockFlag;
        /**
         * C type : XL_MOST150_SHUTDOWN_FLAG_EV
         */
        public s_xl_most150_shutdown_flag mostShutdownFlag;
        /**
         * C type : XL_MOST150_SPDIF_MODE_EV
         */
        public s_xl_most150_spdif_mode mostSpdifMode;
        /**
         * C type : XL_MOST150_ECL_EV
         */
        public s_xl_most150_ecl mostEclEvent;
        /**
         * C type : XL_MOST150_ECL_TERMINATION_EV
         */
        public s_xl_most150_ecl_termination mostEclTermination;
        /**
         * C type : XL_MOST150_CTRL_SPY_EV
         */
        public s_xl_most150_ctrl_spy mostCtrlSpy;
        /**
         * C type : XL_MOST150_ASYNC_TX_ACK_EV
         */
        public s_xl_most150_async_tx_ack mostAsyncTxAck;
        /**
         * C type : XL_MOST150_ETHERNET_SPY_EV
         */
        public s_xl_most150_ethernet_spy mostEthernetSpy;
        /**
         * C type : XL_MOST150_ETHERNET_TX_ACK_EV
         */
        public s_xl_most150_ethernet_tx mostEthernetTxAck;
        /**
         * C type : XL_MOST150_HW_SYNC_EV
         */
        public s_xl_most150_hw_sync mostHWSync;
        /**
         * C type : XL_MOST150_NW_STARTUP_EV
         */
        public s_xl_most150_nw_startup mostStartup;
        /**
         * C type : XL_MOST150_NW_SHUTDOWN_EV
         */
        public s_xl_most150_nw_shutdown mostShutdown;
        /**
         * C type : XL_MOST150_STREAM_STATE_EV
         */
        public s_xl_most150_stream_state mostStreamState;
        /**
         * C type : XL_MOST150_STREAM_TX_BUFFER_EV
         */
        public s_xl_most150_stream_tx_buffer mostStreamTxBuffer;
        /**
         * C type : XL_MOST150_STREAM_RX_BUFFER_EV
         */
        public s_xl_most150_stream_rx_buffer mostStreamRxBuffer;
        /**
         * C type : XL_MOST150_STREAM_TX_UNDERFLOW_EV
         */
        public s_xl_most150_stream_tx_underflow mostStreamTxUnderflow;
        /**
         * C type : XL_MOST150_STREAM_TX_LABEL_EV
         */
        public s_xl_most150_stream_tx_label mostStreamTxLabel;
        /**
         * C type : XL_MOST150_GEN_BYPASS_STRESS_EV
         */
        public s_xl_most150_gen_bypass_stress mostGenBypassStress;
        /**
         * C type : XL_MOST150_ECL_SEQUENCE_EV
         */
        public s_xl_most150_ecl_sequence mostEclSequence;
        /**
         * C type : XL_MOST150_ECL_GLITCH_FILTER_EV
         */
        public s_xl_most150_ecl_glitch_filter mostEclGlitchFilter;
        /**
         * C type : XL_MOST150_SSO_RESULT_EV
         */
        public s_xl_most150_sso_result mostSsoResult;

        public tagData_union() {
            super();
        }

        /**
         * @param mostSpdifMode C type : XL_MOST150_SPDIF_MODE_EV
         */
        public tagData_union(s_xl_most150_spdif_mode mostSpdifMode) {
            super();
            this.mostSpdifMode = mostSpdifMode;
            setType(s_xl_most150_spdif_mode.class);
        }

        /**
         * @param mostStreamTxLabel C type : XL_MOST150_STREAM_TX_LABEL_EV
         */
        public tagData_union(s_xl_most150_stream_tx_label mostStreamTxLabel) {
            super();
            this.mostStreamTxLabel = mostStreamTxLabel;
            setType(s_xl_most150_stream_tx_label.class);
        }

        /**
         * @param mostStartup C type : XL_MOST150_NW_STARTUP_EV
         */
        public tagData_union(s_xl_most150_nw_startup mostStartup) {
            super();
            this.mostStartup = mostStartup;
            setType(s_xl_most150_nw_startup.class);
        }

        /**
         * @param mostShutdownFlag C type : XL_MOST150_SHUTDOWN_FLAG_EV
         */
        public tagData_union(s_xl_most150_shutdown_flag mostShutdownFlag) {
            super();
            this.mostShutdownFlag = mostShutdownFlag;
            setType(s_xl_most150_shutdown_flag.class);
        }

        /**
         * @param mostSsoResult C type : XL_MOST150_SSO_RESULT_EV
         */
        public tagData_union(s_xl_most150_sso_result mostSsoResult) {
            super();
            this.mostSsoResult = mostSsoResult;
            setType(s_xl_most150_sso_result.class);
        }

        /**
         * @param mostFrequency C type : XL_MOST150_FREQUENCY_EV
         */
        public tagData_union(s_xl_most150_frequency mostFrequency) {
            super();
            this.mostFrequency = mostFrequency;
            setType(s_xl_most150_frequency.class);
        }

        /**
         * @param mostAsyncRx C type : XL_MOST150_ASYNC_RX_EV
         */
        public tagData_union(s_xl_most150_async_rx_msg mostAsyncRx) {
            super();
            this.mostAsyncRx = mostAsyncRx;
            setType(s_xl_most150_async_rx_msg.class);
        }

        /**
         * @param mostEthernetTxAck C type : XL_MOST150_ETHERNET_TX_ACK_EV
         */
        public tagData_union(s_xl_most150_ethernet_tx mostEthernetTxAck) {
            super();
            this.mostEthernetTxAck = mostEthernetTxAck;
            setType(s_xl_most150_ethernet_tx.class);
        }

        /**
         * @param mostEventSource C type : XL_MOST150_EVENT_SOURCE_EV
         */
        public tagData_union(s_xl_most150_event_source mostEventSource) {
            super();
            this.mostEventSource = mostEventSource;
            setType(s_xl_most150_event_source.class);
        }

        /**
         * @param mostEthernetSpy C type : XL_MOST150_ETHERNET_SPY_EV
         */
        public tagData_union(s_xl_most150_ethernet_spy mostEthernetSpy) {
            super();
            this.mostEthernetSpy = mostEthernetSpy;
            setType(s_xl_most150_ethernet_spy.class);
        }

        /**
         * @param mostRxLightLockStatus C type : XL_MOST150_RXLIGHT_LOCKSTATUS_EV
         */
        public tagData_union(s_xl_most150_rx_light_lock_status mostRxLightLockStatus) {
            super();
            this.mostRxLightLockStatus = mostRxLightLockStatus;
            setType(s_xl_most150_rx_light_lock_status.class);
        }

        /**
         * @param mostEclSequence C type : XL_MOST150_ECL_SEQUENCE_EV
         */
        public tagData_union(s_xl_most150_ecl_sequence mostEclSequence) {
            super();
            this.mostEclSequence = mostEclSequence;
            setType(s_xl_most150_ecl_sequence.class);
        }

        /**
         * @param mostHWSync C type : XL_MOST150_HW_SYNC_EV
         */
        public tagData_union(s_xl_most150_hw_sync mostHWSync) {
            super();
            this.mostHWSync = mostHWSync;
            setType(s_xl_most150_hw_sync.class);
        }

        /**
         * @param mostTxLight C type : XL_MOST150_TX_LIGHT_EV
         */
        public tagData_union(s_xl_most150_tx_light mostTxLight) {
            super();
            this.mostTxLight = mostTxLight;
            setType(s_xl_most150_tx_light.class);
        }

        /**
         * @param mostEclEvent C type : XL_MOST150_ECL_EV
         */
        public tagData_union(s_xl_most150_ecl mostEclEvent) {
            super();
            this.mostEclEvent = mostEclEvent;
            setType(s_xl_most150_ecl.class);
        }

        /**
         * @param mostAsyncBusload C type : XL_MOST150_ASYNC_BUSLOAD_EV
         */
        public tagData_union(s_xl_most150_async_busload mostAsyncBusload) {
            super();
            this.mostAsyncBusload = mostAsyncBusload;
            setType(s_xl_most150_async_busload.class);
        }

        /**
         * @param mostStreamTxUnderflow C type : XL_MOST150_STREAM_TX_UNDERFLOW_EV
         */
        public tagData_union(s_xl_most150_stream_tx_underflow mostStreamTxUnderflow) {
            super();
            this.mostStreamTxUnderflow = mostStreamTxUnderflow;
            setType(s_xl_most150_stream_tx_underflow.class);
        }

        /**
         * @param mostShutdown C type : XL_MOST150_NW_SHUTDOWN_EV
         */
        public tagData_union(s_xl_most150_nw_shutdown mostShutdown) {
            super();
            this.mostShutdown = mostShutdown;
            setType(s_xl_most150_nw_shutdown.class);
        }

        /**
         * @param mostStreamRxBuffer C type : XL_MOST150_STREAM_RX_BUFFER_EV
         */
        public tagData_union(s_xl_most150_stream_rx_buffer mostStreamRxBuffer) {
            super();
            this.mostStreamRxBuffer = mostStreamRxBuffer;
            setType(s_xl_most150_stream_rx_buffer.class);
        }

        /**
         * @param mostCtrlTxAck C type : XL_MOST150_CTRL_TX_ACK_EV
         */
        public tagData_union(s_xl_most150_ctrl_tx_ack mostCtrlTxAck) {
            super();
            this.mostCtrlTxAck = mostCtrlTxAck;
            setType(s_xl_most150_ctrl_tx_ack.class);
        }

        /**
         * @param mostCtrlBusload C type : XL_MOST150_CTRL_BUSLOAD_EV
         */
        public tagData_union(s_xl_most150_ctrl_busload mostCtrlBusload) {
            super();
            this.mostCtrlBusload = mostCtrlBusload;
            setType(s_xl_most150_ctrl_busload.class);
        }

        /**
         * @param mostAsyncTxAck C type : XL_MOST150_ASYNC_TX_ACK_EV
         */
        public tagData_union(s_xl_most150_async_tx_ack mostAsyncTxAck) {
            super();
            this.mostAsyncTxAck = mostAsyncTxAck;
            setType(s_xl_most150_async_tx_ack.class);
        }

        /**
         * @param mostGenBypassStress C type : XL_MOST150_GEN_BYPASS_STRESS_EV
         */
        public tagData_union(s_xl_most150_gen_bypass_stress mostGenBypassStress) {
            super();
            this.mostGenBypassStress = mostGenBypassStress;
            setType(s_xl_most150_gen_bypass_stress.class);
        }

        /**
         * @param mostSyncAllocInfo C type : XL_MOST150_SYNC_ALLOC_INFO_EV
         */
        public tagData_union(s_xl_most150_sync_alloc_info mostSyncAllocInfo) {
            super();
            this.mostSyncAllocInfo = mostSyncAllocInfo;
            setType(s_xl_most150_sync_alloc_info.class);
        }

        /**
         * @param mostConfigureRxBuffer C type : XL_MOST150_CONFIGURE_RX_BUFFER_EV
         */
        public tagData_union(s_xl_most150_configure_rx_buffer mostConfigureRxBuffer) {
            super();
            this.mostConfigureRxBuffer = mostConfigureRxBuffer;
            setType(s_xl_most150_configure_rx_buffer.class);
        }

        /**
         * @param mostError C type : XL_MOST150_ERROR_EV
         */
        public tagData_union(s_xl_most150_error mostError) {
            super();
            this.mostError = mostError;
            setType(s_xl_most150_error.class);
        }

        /**
         * @param mostDeviceMode C type : XL_MOST150_DEVICE_MODE_EV
         */
        public tagData_union(s_xl_most150_device_mode mostDeviceMode) {
            super();
            this.mostDeviceMode = mostDeviceMode;
            setType(s_xl_most150_device_mode.class);
        }

        /**
         * @param mostGenLockError C type : XL_MOST150_GEN_LOCK_ERROR_EV
         */
        public tagData_union(s_xl_most150_gen_lock_error mostGenLockError) {
            super();
            this.mostGenLockError = mostGenLockError;
            setType(s_xl_most150_gen_lock_error.class);
        }

        /**
         * @param mostCtrlRx C type : XL_MOST150_CTRL_RX_EV
         */
        public tagData_union(s_xl_most150_ctrl_rx mostCtrlRx) {
            super();
            this.mostCtrlRx = mostCtrlRx;
            setType(s_xl_most150_ctrl_rx.class);
        }

        /**
         * @param mostLightPower C type : XL_MOST150_LIGHT_POWER_EV
         */
        public tagData_union(s_xl_most150_tx_light_power mostLightPower) {
            super();
            this.mostLightPower = mostLightPower;
            setType(s_xl_most150_tx_light_power.class);
        }

        /**
         * @param mostStreamTxBuffer C type : XL_MOST150_STREAM_TX_BUFFER_EV
         */
        public tagData_union(s_xl_most150_stream_tx_buffer mostStreamTxBuffer) {
            super();
            this.mostStreamTxBuffer = mostStreamTxBuffer;
            setType(s_xl_most150_stream_tx_buffer.class);
        }

        /**
         * @param mostCtrlSyncAudio C type : XL_MOST150_CTRL_SYNC_AUDIO_EV
         */
        public tagData_union(s_xl_most150_ctrl_sync_audio mostCtrlSyncAudio) {
            super();
            this.mostCtrlSyncAudio = mostCtrlSyncAudio;
            setType(s_xl_most150_ctrl_sync_audio.class);
        }

        /**
         * @param rawData C type : unsigned char[(unsigned int)2048]
         */
        public tagData_union(byte rawData[]) {
            super();
            if ((rawData.length != this.rawData.length))
                throw new IllegalArgumentException("Wrong array size !");
            this.rawData = rawData;
            setType(byte[].class);
        }

        /**
         * @param mostSystemLockFlag C type : XL_MOST150_SYSTEMLOCK_FLAG_EV
         */
        public tagData_union(s_xl_most150_systemlock_flag mostSystemLockFlag) {
            super();
            this.mostSystemLockFlag = mostSystemLockFlag;
            setType(s_xl_most150_systemlock_flag.class);
        }

        /**
         * @param mostSpecialNodeInfo C type : XL_MOST150_SPECIAL_NODE_INFO_EV
         */
        public tagData_union(s_xl_most150_special_node_info mostSpecialNodeInfo) {
            super();
            this.mostSpecialNodeInfo = mostSpecialNodeInfo;
            setType(s_xl_most150_special_node_info.class);
        }

        /**
         * @param mostEclTermination C type : XL_MOST150_ECL_TERMINATION_EV
         */
        public tagData_union(s_xl_most150_ecl_termination mostEclTermination) {
            super();
            this.mostEclTermination = mostEclTermination;
            setType(s_xl_most150_ecl_termination.class);
        }

        /**
         * @param mostCtrlSpy C type : XL_MOST150_CTRL_SPY_EV
         */
        public tagData_union(s_xl_most150_ctrl_spy mostCtrlSpy) {
            super();
            this.mostCtrlSpy = mostCtrlSpy;
            setType(s_xl_most150_ctrl_spy.class);
        }

        /**
         * @param mostSyncVolumeStatus C type : XL_MOST150_SYNC_VOLUME_STATUS_EV
         */
        public tagData_union(s_xl_most150_sync_volume_status mostSyncVolumeStatus) {
            super();
            this.mostSyncVolumeStatus = mostSyncVolumeStatus;
            setType(s_xl_most150_sync_volume_status.class);
        }

        /**
         * @param mostEthernetRx C type : XL_MOST150_ETHERNET_RX_EV
         */
        public tagData_union(s_xl_most150_ethernet_rx mostEthernetRx) {
            super();
            this.mostEthernetRx = mostEthernetRx;
            setType(s_xl_most150_ethernet_rx.class);
        }

        /**
         * @param mostAsyncSpy C type : XL_MOST150_ASYNC_SPY_EV
         */
        public tagData_union(s_xl_most150_async_spy_msg mostAsyncSpy) {
            super();
            this.mostAsyncSpy = mostAsyncSpy;
            setType(s_xl_most150_async_spy_msg.class);
        }

        /**
         * @param mostEclGlitchFilter C type : XL_MOST150_ECL_GLITCH_FILTER_EV
         */
        public tagData_union(s_xl_most150_ecl_glitch_filter mostEclGlitchFilter) {
            super();
            this.mostEclGlitchFilter = mostEclGlitchFilter;
            setType(s_xl_most150_ecl_glitch_filter.class);
        }

        /**
         * @param mostSyncMuteStatus C type : XL_MOST150_SYNC_MUTE_STATUS_EV
         */
        public tagData_union(s_xl_most150_sync_mute_status mostSyncMuteStatus) {
            super();
            this.mostSyncMuteStatus = mostSyncMuteStatus;
            setType(s_xl_most150_sync_mute_status.class);
        }

        /**
         * @param mostGenLightError C type : XL_MOST150_GEN_LIGHT_ERROR_EV
         */
        public tagData_union(s_xl_most150_gen_light_error mostGenLightError) {
            super();
            this.mostGenLightError = mostGenLightError;
            setType(s_xl_most150_gen_light_error.class);
        }

        /**
         * @param mostStreamState C type : XL_MOST150_STREAM_STATE_EV
         */
        public tagData_union(s_xl_most150_stream_state mostStreamState) {
            super();
            this.mostStreamState = mostStreamState;
            setType(s_xl_most150_stream_state.class);
        }

        public static class ByReference extends tagData_union implements Structure.ByReference {

        }

        ;

        public static class ByValue extends tagData_union implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends s_xl_event_most150 implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_event_most150 implements Structure.ByValue {

    }

    ;
}
