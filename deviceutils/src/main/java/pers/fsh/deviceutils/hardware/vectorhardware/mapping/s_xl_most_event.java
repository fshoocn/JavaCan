package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h:245</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most_event extends Structure {
    /**
     * 4 - overall size of the complete event
     */
    public int size;
    /**
     * 2 - type of the event<br>
     * C type : XLmostEventTag
     */
    public short tag;
    /**
     * 2
     */
    public short channelIndex;
    /**
     * 4 - internal use only
     */
    public int userHandle;
    /**
     * 2
     */
    public short flagsChip;
    /**
     * 2
     */
    public short reserved;
    /**
     * 8<br>
     * C type : XLuint64
     */
    public long timeStamp;
    /**
     * 8<br>
     * C type : XLuint64
     */
    public long timeStampSync;
    /**
     * 32 bytes -> XL_MOST_EVENT_HEADER_SIZE<br>
     * C type : s_xl_most_tag_data
     */
    public s_xl_most_tag_data tagData;

    public s_xl_most_event() {
        super(8);
    }

    /**
     * @param size          4 - overall size of the complete event<br>
     * @param tag           2 - type of the event<br>
     *                      C type : XLmostEventTag<br>
     * @param channelIndex  2<br>
     * @param userHandle    4 - internal use only<br>
     * @param flagsChip     2<br>
     * @param reserved      2<br>
     * @param timeStamp     8<br>
     *                      C type : XLuint64<br>
     * @param timeStampSync 8<br>
     *                      C type : XLuint64<br>
     * @param tagData       32 bytes -> XL_MOST_EVENT_HEADER_SIZE<br>
     *                      C type : s_xl_most_tag_data
     */
    public s_xl_most_event(int size, short tag, short channelIndex, int userHandle, short flagsChip, short reserved, long timeStamp, long timeStampSync, s_xl_most_tag_data tagData) {
        super(8);
        this.size = size;
        this.tag = tag;
        this.channelIndex = channelIndex;
        this.userHandle = userHandle;
        this.flagsChip = flagsChip;
        this.reserved = reserved;
        this.timeStamp = timeStamp;
        this.timeStampSync = timeStampSync;
        this.tagData = tagData;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("size", "tag", "channelIndex", "userHandle", "flagsChip", "reserved", "timeStamp", "timeStampSync", "tagData");
    }

    public static class ByReference extends s_xl_most_event implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most_event implements Structure.ByValue {

    }

    ;
}
