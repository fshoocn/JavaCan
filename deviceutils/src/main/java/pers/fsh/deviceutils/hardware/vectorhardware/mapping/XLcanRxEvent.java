package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;
import com.sun.jna.Union;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class XLcanRxEvent extends Structure {

    private static final long XL_RECEIVE_MSG = 0x0001;
    private static final long XL_CHIP_STATE = 0x0004;
    private static final long XL_TRANSCEIVER_INFO = 0x0006;
    private static final long XL_TRANSCEIVER = XL_TRANSCEIVER_INFO;
    private static final long XL_TIMER_EVENT = 0x0008;
    private static final long XL_TIMER = XL_TIMER_EVENT;
    private static final long XL_TRANSMIT_MSG = 0x000A;
    private static final long XL_SYNC_PULSE = 0x000B;
    private static final long XL_APPLICATION_NOTIFICATION = 0x000F;
    private static final long XL_CAN_EV_TAG_RX_OK = 0x0400;
    private static final long XL_CAN_EV_TAG_RX_ERROR = 0x0401;
    private static final long XL_CAN_EV_TAG_TX_ERROR = 0x0402;
    private static final long XL_CAN_EV_TAG_TX_REQUEST = 0x0403;
    private static final long XL_CAN_EV_TAG_TX_OK = 0x0404;
    private static final long XL_CAN_EV_TAG_CHIP_STATE = 0x0409;
    // CAN/CAN-FD event tags
    // Tx
    private static final long XL_CAN_EV_TAG_TX_MSG = 0x0440;


    /**
     * 4 - overall size of the complete event
     */
    public int size;
    /**
     * 2 - type of the event
     */
    public short tag;
    /**
     * 2
     */
    public short channelIndex;
    /**
     * 4 (lower 12 bit available for CAN)
     */
    public int userHandle;
    /**
     * 2 queue overflow (upper 8bit)
     */
    public short flagsChip;
    /**
     * 2
     */
    public short reserved0;
    /**
     * 8<br>
     * C type : XLuint64
     */
    public long reserved1;
    /**
     * 8 - timestamp which is synchronized by the driver<br>
     * C type : XLuint64
     */
    public long timeStampSync;
    /**
     * C type : u_tagData
     */
    public u_tagData tagData;

    public XLcanRxEvent() {
        super(8);
    }

    ;

    /**
     * @param size          4 - overall size of the complete event<br>
     * @param tag           2 - type of the event<br>
     * @param channelIndex  2<br>
     * @param userHandle    4 (lower 12 bit available for CAN)<br>
     * @param flagsChip     2 queue overflow (upper 8bit)<br>
     * @param reserved0     2<br>
     * @param reserved1     8<br>
     *                      C type : XLuint64<br>
     * @param timeStampSync 8 - timestamp which is synchronized by the driver<br>
     *                      C type : XLuint64<br>
     * @param tagData       C type : u_tagData
     */
    public XLcanRxEvent(int size, short tag, short channelIndex, int userHandle, short flagsChip, short reserved0, long reserved1, long timeStampSync, u_tagData tagData) {
        super(8);
        this.size = size;
        this.tag = tag;
        this.channelIndex = channelIndex;
        this.userHandle = userHandle;
        this.flagsChip = flagsChip;
        this.reserved0 = reserved0;
        this.reserved1 = reserved1;
        this.timeStampSync = timeStampSync;
        this.tagData = tagData;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("size", "tag", "channelIndex", "userHandle", "flagsChip", "reserved0", "reserved1", "timeStampSync", "tagData");
    }

    /**
     * <i>native declaration : vxlapi.h:132</i>
     */
    public static class u_tagData extends Union {
        /**
         * C type : unsigned char[128 - 32]
         */
        public byte[] raw = new byte[128 - 32];
        /**
         * C type : XL_CAN_EV_RX_MSG
         */
        public XL_CAN_EV_RX_MSG canRxOkMsg;
        /**
         * C type : XL_CAN_EV_RX_MSG
         */
        public XL_CAN_EV_RX_MSG canTxOkMsg;
        /**
         * C type : XL_CAN_EV_TX_REQUEST
         */
        public XL_CAN_EV_TX_REQUEST canTxRequest;
        /**
         * C type : XL_CAN_EV_ERROR
         */
        public XL_CAN_EV_ERROR canError;
        /**
         * C type : XL_CAN_EV_CHIP_STATE
         */
        public XL_CAN_EV_CHIP_STATE canChipState;
        /**
         * C type : XL_CAN_EV_SYNC_PULSE
         */
        public s_xl_sync_pulse_ev canSyncPulse;

        public u_tagData() {
            super();
        }

        /**
         * @param raw C type : unsigned char[128 - 32]
         */
        public u_tagData(byte[] raw) {
            super();
            setType(byte[].class);
            if ((raw.length != this.raw.length))
                throw new IllegalArgumentException("Wrong array size !");
            this.raw = raw;
        }

        /**
         * @param canRxOkMsg_or_canTxOkMsg C type : XL_CAN_EV_RX_MSG, or C type : XL_CAN_EV_RX_MSG
         */
        public u_tagData(XL_CAN_EV_RX_MSG canRxOkMsg_or_canTxOkMsg) {
            super();
            setType(XL_CAN_EV_RX_MSG.class);
            this.canTxOkMsg = this.canRxOkMsg = canRxOkMsg_or_canTxOkMsg;
        }

        /**
         * @param canSyncPulse C type : XL_CAN_EV_SYNC_PULSE
         */
        public u_tagData(s_xl_sync_pulse_ev canSyncPulse) {
            super();
            setType(s_xl_sync_pulse_ev.class);
            this.canSyncPulse = canSyncPulse;
        }

        /**
         * @param canTxRequest C type : XL_CAN_EV_TX_REQUEST
         */
        public u_tagData(XL_CAN_EV_TX_REQUEST canTxRequest) {
            super();
            setType(XL_CAN_EV_TX_REQUEST.class);
            this.canTxRequest = canTxRequest;
        }

        /**
         * @param canChipState C type : XL_CAN_EV_CHIP_STATE
         */
        public u_tagData(XL_CAN_EV_CHIP_STATE canChipState) {
            super();
            setType(XL_CAN_EV_CHIP_STATE.class);
            this.canChipState = canChipState;
        }

        /**
         * @param canError C type : XL_CAN_EV_ERROR
         */
        public u_tagData(XL_CAN_EV_ERROR canError) {
            super();
            setType(XL_CAN_EV_ERROR.class);
            this.canError = canError;
        }

        public static class ByReference extends u_tagData implements Structure.ByReference {

        }

        ;

        public static class ByValue extends u_tagData implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends XLcanRxEvent implements Structure.ByReference {

    }

    ;

    public static class ByValue extends XLcanRxEvent implements Structure.ByValue {

    }

    ;
}
