package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;
import com.sun.jna.Union;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_kline_error extends Structure {
    public int klineErrorTag;
    public int reserved;
    /**
     * C type : data_union
     */
    public data_union data;

    public s_xl_kline_error() {
        super(1);
    }

    ;

    /**
     * @param data C type : data_union
     */
    public s_xl_kline_error(int klineErrorTag, int reserved, data_union data) {
        super(1);
        this.klineErrorTag = klineErrorTag;
        this.reserved = reserved;
        this.data = data;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("klineErrorTag", "reserved", "data");
    }

    /**
     * <i>native declaration : vxlapi.h:314</i>
     */
    public static class data_union extends Union {
        /**
         * klineErrorTag: XL_KLINE_ERROR_TYPE_RXTX_ERROR / XL_KLINE_ERROR_TYPE_FI<br>
         * C type : XL_KLINE_ERROR_RXTX
         */
        public s_xl_kline_error_rxtx rxtxErr;
        /**
         * klineErrorTag: XL_KLINE_ERROR_TYPE_5BD_TESTER<br>
         * C type : XL_KLINE_ERROR_TESTER_5BD
         */
        public s_xl_kline_error_5bd_tester tester5BdErr;
        /**
         * klineErrorTag: XL_KLINE_ERROR_TYPE_5BD_ECU<br>
         * C type : XL_KLINE_ERROR_ECU_5BD
         */
        public s_xl_kline_error_5bd_ecu ecu5BdErr;
        /**
         * klineErrorTag: XL_KLINE_ERROR_TYPE_IBS<br>
         * C type : XL_KLINE_ERROR_IBS
         */
        public s_xl_kline_error_ibs ibsErr;
        /**
         * C type : unsigned int[4]
         */
        public int[] reserved = new int[4];

        public data_union() {
            super();
        }

        /**
         * @param tester5BdErr klineErrorTag: XL_KLINE_ERROR_TYPE_5BD_TESTER<br>
         *                     C type : XL_KLINE_ERROR_TESTER_5BD
         */
        public data_union(s_xl_kline_error_5bd_tester tester5BdErr) {
            super();
            this.tester5BdErr = tester5BdErr;
            setType(s_xl_kline_error_5bd_tester.class);
        }

        /**
         * @param ibsErr klineErrorTag: XL_KLINE_ERROR_TYPE_IBS<br>
         *               C type : XL_KLINE_ERROR_IBS
         */
        public data_union(s_xl_kline_error_ibs ibsErr) {
            super();
            this.ibsErr = ibsErr;
            setType(s_xl_kline_error_ibs.class);
        }

        /**
         * @param reserved C type : unsigned int[4]
         */
        public data_union(int reserved[]) {
            super();
            if ((reserved.length != this.reserved.length))
                throw new IllegalArgumentException("Wrong array size !");
            this.reserved = reserved;
            setType(int[].class);
        }

        /**
         * @param ecu5BdErr klineErrorTag: XL_KLINE_ERROR_TYPE_5BD_ECU<br>
         *                  C type : XL_KLINE_ERROR_ECU_5BD
         */
        public data_union(s_xl_kline_error_5bd_ecu ecu5BdErr) {
            super();
            this.ecu5BdErr = ecu5BdErr;
            setType(s_xl_kline_error_5bd_ecu.class);
        }

        /**
         * @param rxtxErr klineErrorTag: XL_KLINE_ERROR_TYPE_RXTX_ERROR / XL_KLINE_ERROR_TYPE_FI<br>
         *                C type : XL_KLINE_ERROR_RXTX
         */
        public data_union(s_xl_kline_error_rxtx rxtxErr) {
            super();
            this.rxtxErr = rxtxErr;
            setType(s_xl_kline_error_rxtx.class);
        }

        public static class ByReference extends data_union implements Structure.ByReference {

        }

        ;

        public static class ByValue extends data_union implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends s_xl_kline_error implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_kline_error implements Structure.ByValue {

    }

    ;
}
