package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_remote_location_config extends Structure {
    /**
     * C type : char[64]
     */
    public byte[] hostName = new byte[64];
    /**
     * C type : char[64]
     */
    public byte[] alias = new byte[64];
    /**
     * C type : XLipAddress
     */
    public s_xl_ip_address ipAddress;
    /**
     * C type : XLipAddress
     */
    public s_xl_ip_address userIpAddress;
    public int deviceType;
    public int serialNumber;
    public int articleNumber;
    /**
     * C type : XLremoteHandle
     */
    public int remoteHandle;

    public s_xl_remote_location_config() {
        super(8);
    }

    /**
     * @param hostName      C type : char[64]<br>
     * @param alias         C type : char[64]<br>
     * @param ipAddress     C type : XLipAddress<br>
     * @param userIpAddress C type : XLipAddress<br>
     * @param remoteHandle  C type : XLremoteHandle
     */
    public s_xl_remote_location_config(byte hostName[], byte alias[], s_xl_ip_address ipAddress, s_xl_ip_address userIpAddress, int deviceType, int serialNumber, int articleNumber, int remoteHandle) {
        super(8);
        if ((hostName.length != this.hostName.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.hostName = hostName;
        if ((alias.length != this.alias.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.alias = alias;
        this.ipAddress = ipAddress;
        this.userIpAddress = userIpAddress;
        this.deviceType = deviceType;
        this.serialNumber = serialNumber;
        this.articleNumber = articleNumber;
        this.remoteHandle = remoteHandle;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("hostName", "alias", "ipAddress", "userIpAddress", "deviceType", "serialNumber", "articleNumber", "remoteHandle");
    }

    public static class ByReference extends s_xl_remote_location_config implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_remote_location_config implements Structure.ByValue {

    }

    ;
}
