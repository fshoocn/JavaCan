package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most_ctrl_msg extends Structure {
    public byte ctrlPrio;
    public byte ctrlType;
    public short targetAddress;
    public short sourceAddress;
    /**
     * C type : unsigned char[17]
     */
    public byte[] ctrlData = new byte[17];
    /**
     * transmission or real receiption
     */
    public byte direction;
    /**
     * unused for real rx msgs
     */
    public int status;

    public s_xl_most_ctrl_msg() {
        super(8);
    }

    /**
     * @param ctrlData  C type : unsigned char[17]<br>
     * @param direction transmission or real receiption<br>
     * @param status    unused for real rx msgs
     */
    public s_xl_most_ctrl_msg(byte ctrlPrio, byte ctrlType, short targetAddress, short sourceAddress, byte ctrlData[], byte direction, int status) {
        super(8);
        this.ctrlPrio = ctrlPrio;
        this.ctrlType = ctrlType;
        this.targetAddress = targetAddress;
        this.sourceAddress = sourceAddress;
        if ((ctrlData.length != this.ctrlData.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.ctrlData = ctrlData;
        this.direction = direction;
        this.status = status;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("ctrlPrio", "ctrlType", "targetAddress", "sourceAddress", "ctrlData", "direction", "status");
    }

    public static class ByReference extends s_xl_most_ctrl_msg implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most_ctrl_msg implements Structure.ByValue {

    }

    ;
}
