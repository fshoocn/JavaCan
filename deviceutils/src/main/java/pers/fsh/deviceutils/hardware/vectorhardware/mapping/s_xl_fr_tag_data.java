package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Union;

/**
 * <i>native declaration : vxlapi.h:140</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_fr_tag_data extends Union {
    /**
     * C type : XL_FR_START_CYCLE_EV
     */
    public s_xl_fr_start_cycle frStartCycle;
    /**
     * C type : XL_FR_RX_FRAME_EV
     */
    public s_xl_fr_rx_frame frRxFrame;
    /**
     * C type : XL_FR_TX_FRAME_EV
     */
    public s_xl_fr_tx_frame frTxFrame;
    /**
     * C type : XL_FR_WAKEUP_EV
     */
    public s_xl_fr_wakeup frWakeup;
    /**
     * C type : XL_FR_SYMBOL_WINDOW_EV
     */
    public s_xl_fr_symbol_window frSymbolWindow;
    /**
     * C type : XL_FR_ERROR_EV
     */
    public s_xl_fr_error frError;
    /**
     * C type : XL_FR_STATUS_EV
     */
    public s_xl_fr_status frStatus;
    /**
     * C type : XL_FR_NM_VECTOR_EV
     */
    public s_xl_fr_nm_vector frNmVector;
    /**
     * C type : XL_FR_SYNC_PULSE_EV
     */
    public s_xl_sync_pulse_ev frSyncPulse;
    /**
     * C type : XL_FR_SPY_FRAME_EV
     */
    public s_xl_fr_spy_frame frSpyFrame;
    /**
     * C type : XL_FR_SPY_SYMBOL_EV
     */
    public s_xl_fr_spy_symbol frSpySymbol;
    /**
     * C type : XL_APPLICATION_NOTIFICATION_EV
     */
    public s_xl_application_notification applicationNotification;
    /**
     * C type : unsigned char[512 - 32]
     */
    public byte[] raw = new byte[512 - 32];

    public s_xl_fr_tag_data() {
        super();
    }

    /**
     * @param frWakeup C type : XL_FR_WAKEUP_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_wakeup frWakeup) {
        super();
        this.frWakeup = frWakeup;
        setType(s_xl_fr_wakeup.class);
    }

    /**
     * @param applicationNotification C type : XL_APPLICATION_NOTIFICATION_EV
     */
    public s_xl_fr_tag_data(s_xl_application_notification applicationNotification) {
        super();
        this.applicationNotification = applicationNotification;
        setType(s_xl_application_notification.class);
    }

    /**
     * @param frRxFrame C type : XL_FR_RX_FRAME_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_rx_frame frRxFrame) {
        super();
        this.frRxFrame = frRxFrame;
        setType(s_xl_fr_rx_frame.class);
    }

    /**
     * @param frSpySymbol C type : XL_FR_SPY_SYMBOL_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_spy_symbol frSpySymbol) {
        super();
        this.frSpySymbol = frSpySymbol;
        setType(s_xl_fr_spy_symbol.class);
    }

    /**
     * @param frSpyFrame C type : XL_FR_SPY_FRAME_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_spy_frame frSpyFrame) {
        super();
        this.frSpyFrame = frSpyFrame;
        setType(s_xl_fr_spy_frame.class);
    }

    /**
     * @param raw C type : unsigned char[512 - 32]
     */
    public s_xl_fr_tag_data(byte raw[]) {
        super();
        if ((raw.length != this.raw.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.raw = raw;
        setType(byte[].class);
    }

    /**
     * @param frSymbolWindow C type : XL_FR_SYMBOL_WINDOW_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_symbol_window frSymbolWindow) {
        super();
        this.frSymbolWindow = frSymbolWindow;
        setType(s_xl_fr_symbol_window.class);
    }

    /**
     * @param frSyncPulse C type : XL_FR_SYNC_PULSE_EV
     */
    public s_xl_fr_tag_data(s_xl_sync_pulse_ev frSyncPulse) {
        super();
        this.frSyncPulse = frSyncPulse;
        setType(s_xl_sync_pulse_ev.class);
    }

    /**
     * @param frTxFrame C type : XL_FR_TX_FRAME_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_tx_frame frTxFrame) {
        super();
        this.frTxFrame = frTxFrame;
        setType(s_xl_fr_tx_frame.class);
    }

    /**
     * @param frStartCycle C type : XL_FR_START_CYCLE_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_start_cycle frStartCycle) {
        super();
        this.frStartCycle = frStartCycle;
        setType(s_xl_fr_start_cycle.class);
    }

    /**
     * @param frNmVector C type : XL_FR_NM_VECTOR_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_nm_vector frNmVector) {
        super();
        this.frNmVector = frNmVector;
        setType(s_xl_fr_nm_vector.class);
    }

    /**
     * @param frError C type : XL_FR_ERROR_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_error frError) {
        super();
        this.frError = frError;
        setType(s_xl_fr_error.class);
    }

    /**
     * @param frStatus C type : XL_FR_STATUS_EV
     */
    public s_xl_fr_tag_data(s_xl_fr_status frStatus) {
        super();
        this.frStatus = frStatus;
        setType(s_xl_fr_status.class);
    }

    public static class ByReference extends s_xl_fr_tag_data implements com.sun.jna.Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_fr_tag_data implements com.sun.jna.Structure.ByValue {

    }

    ;
}
