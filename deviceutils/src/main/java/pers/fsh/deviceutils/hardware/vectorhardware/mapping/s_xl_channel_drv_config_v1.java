package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_channel_drv_config_v1 extends Structure {
    /**
     * !< Index of the channel (same hardware) (0,1,...)
     */
    public int hwChannel;
    /**
     * !< Global channel index (0,1,...) in the channel list
     */
    public int channelIndex;
    /**
     * !< on remote devices this is the index of the local administrated channel<br>
     * !< The index of the device in the device list
     */
    public int deviceIndex;
    /**
     * !< version of interface with driver
     */
    public int interfaceVersion;
    /**
     * !< The channel is on bus
     */
    public int isOnBus;
    /**
     * !< capabilities which are supported (e.g CHANNEL_FLAG_XXX)<br>
     * C type : XLuint64
     */
    public long channelCapabilities;
    /**
     * C type : XLuint64
     */
    public long channelCapabilities2;
    /**
     * !< what buses are supported<br>
     * C type : XLuint64
     */
    public long channelBusCapabilities;
    /**
     * !< and which are possible to be activated<br>
     * C type : XLuint64
     */
    public long channelBusActiveCapabilities;
    /**
     * !< currently selected bus<br>
     * C type : XLuint64
     */
    public long connectedBusType;
    public int currentlyAvailableTimestamps;
    /**
     * C type : XLbusParams
     */
    public XLbusParams busParams;
    /**
     * C type : transceiver_struct
     */
    public transceiver_struct transceiver;
    /**
     * !< optional reference to remote channel info<br>
     * C type : s_xl_channel_drv_config_v1*
     */
    public ByReference remoteChannel;

    public s_xl_channel_drv_config_v1() {
        super(8);
    }

    ;

    protected List<String> getFieldOrder() {
        return Arrays.asList("hwChannel", "channelIndex", "deviceIndex", "interfaceVersion", "isOnBus", "channelCapabilities", "channelCapabilities2", "channelBusCapabilities", "channelBusActiveCapabilities", "connectedBusType", "currentlyAvailableTimestamps", "busParams", "transceiver", "remoteChannel");
    }

    /**
     * <i>native declaration : vxlapi.h:27</i>
     */
    public static class transceiver_struct extends Structure {
        /**
         * !< name of the transceiver, NULL terminated UTF-8 encoded string<br>
         * C type : const char*
         */
        public Pointer name;
        public int type;
        /**
         * !< XL_CHANNEL_CONFIG_ERROR_XXX (see above)
         */
        public int configError;

        public transceiver_struct() {
            super(8);
        }

        /**
         * @param name        !< name of the transceiver, NULL terminated UTF-8 encoded string<br>
         *                    C type : const char*<br>
         * @param configError !< XL_CHANNEL_CONFIG_ERROR_XXX (see above)
         */
        public transceiver_struct(Pointer name, int type, int configError) {
            super(8);
            this.name = name;
            this.type = type;
            this.configError = configError;
        }

        protected List<String> getFieldOrder() {
            return Arrays.asList("name", "type", "configError");
        }

        public static class ByReference extends transceiver_struct implements Structure.ByReference {

        }

        ;

        public static class ByValue extends transceiver_struct implements Structure.ByValue {

        }

        ;
    }

    public static class ByReference extends s_xl_channel_drv_config_v1 implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_channel_drv_config_v1 implements Structure.ByValue {

    }

    ;
}
