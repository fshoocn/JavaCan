package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most150_ctrl_tx_msg extends Structure {
    /**
     * Prio: Currently fixed to 0x01 for Control Messages
     */
    public int ctrlPrio;
    /**
     * 1..16 attempts, set an invalid value to use the default value set by xlMost150SetCtrlRetryParameters
     */
    public int ctrlSendAttempts;
    public int targetAddress;
    /**
     * ctrlData[6..50]: Payload<br>
     * C type : unsigned char[51]
     */
    public byte[] ctrlData = new byte[51];

    public s_xl_most150_ctrl_tx_msg() {
        super(1);
    }

    /**
     * @param ctrlPrio         Prio: Currently fixed to 0x01 for Control Messages<br>
     * @param ctrlSendAttempts 1..16 attempts, set an invalid value to use the default value set by xlMost150SetCtrlRetryParameters<br>
     * @param ctrlData         ctrlData[6..50]: Payload<br>
     *                         C type : unsigned char[51]
     */
    public s_xl_most150_ctrl_tx_msg(int ctrlPrio, int ctrlSendAttempts, int targetAddress, byte ctrlData[]) {
        super(1);
        this.ctrlPrio = ctrlPrio;
        this.ctrlSendAttempts = ctrlSendAttempts;
        this.targetAddress = targetAddress;
        if ((ctrlData.length != this.ctrlData.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.ctrlData = ctrlData;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("ctrlPrio", "ctrlSendAttempts", "targetAddress", "ctrlData");
    }

    public static class ByReference extends s_xl_most150_ctrl_tx_msg implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most150_ctrl_tx_msg implements Structure.ByValue {

    }

    ;
}
