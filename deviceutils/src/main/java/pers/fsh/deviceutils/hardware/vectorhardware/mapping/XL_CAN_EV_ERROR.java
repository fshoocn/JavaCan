package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class XL_CAN_EV_ERROR extends Structure {
    public byte errorCode;
    /**
     * C type : unsigned char[95]
     */
    public byte[] reserved = new byte[95];

    public XL_CAN_EV_ERROR() {
        super(8);
    }

    /**
     * @param reserved C type : unsigned char[95]
     */
    public XL_CAN_EV_ERROR(byte errorCode, byte reserved[]) {
        super(8);
        this.errorCode = errorCode;
        if ((reserved.length != this.reserved.length))
            throw new IllegalArgumentException("Wrong array size !");
        this.reserved = reserved;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("errorCode", "reserved");
    }

    public static class ByReference extends XL_CAN_EV_ERROR implements Structure.ByReference {

    }

    ;

    public static class ByValue extends XL_CAN_EV_ERROR implements Structure.ByValue {

    }

    ;
}
