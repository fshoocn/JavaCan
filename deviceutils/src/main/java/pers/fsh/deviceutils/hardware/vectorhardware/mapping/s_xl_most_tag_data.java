package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Union;
import pers.fsh.deviceutils.hardware.vectorhardware.mapping.Vxlapi64DllLibrary.XL_MOST_STREAM_BUFFER_EV;

/**
 * rx event definition<br>
 * <i>native declaration : vxlapi.h:208</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most_tag_data extends Union {
    /**
     * C type : XL_MOST_CTRL_SPY_EV
     */
    public s_xl_most_ctrl_spy mostCtrlSpy;
    /**
     * C type : XL_MOST_CTRL_MSG_EV
     */
    public s_xl_most_ctrl_msg mostCtrlMsg;
    /**
     * received async frame<br>
     * C type : XL_MOST_ASYNC_MSG_EV
     */
    public s_xl_most_async_msg mostAsyncMsg;
    /**
     * async frame tx acknowledge<br>
     * C type : XL_MOST_ASYNC_TX_EV
     */
    public s_xl_most_async_tx mostAsyncTx;
    /**
     * C type : XL_MOST_SPECIAL_REGISTER_EV
     */
    public s_xl_most_special_register mostSpecialRegister;
    /**
     * C type : XL_MOST_EVENT_SOURCE_EV
     */
    public s_xl_most_event_source mostEventSource;
    /**
     * C type : XL_MOST_ALL_BYPASS_EV
     */
    public s_xl_most_all_bypass mostAllBypass;
    /**
     * C type : XL_MOST_TIMING_MODE_EV
     */
    public s_xl_most_timing_mode mostTimingMode;
    /**
     * C type : XL_MOST_TIMING_MODE_SPDIF_EV
     */
    public s_xl_most_timing_mode_spdif mostTimingModeSpdif;
    /**
     * C type : XL_MOST_FREQUENCY_EV
     */
    public s_xl_most_frequency mostFrequency;
    /**
     * C type : XL_MOST_REGISTER_BYTES_EV
     */
    public s_xl_most_register_bytes mostRegisterBytes;
    /**
     * C type : XL_MOST_REGISTER_BITS_EV
     */
    public s_xl_most_register_bits mostRegisterBits;
    /**
     * C type : XL_MOST_SYNC_ALLOC_EV
     */
    public s_xl_most_sync_alloc mostSyncAlloc;
    /**
     * C type : XL_MOST_CTRL_SYNC_AUDIO_EV
     */
    public s_xl_most_ctrl_sync_audio mostCtrlSyncAudio;
    /**
     * C type : XL_MOST_CTRL_SYNC_AUDIO_EX_EV
     */
    public s_xl_most_ctrl_sync_audio_ex mostCtrlSyncAudioEx;
    /**
     * C type : XL_MOST_SYNC_VOLUME_STATUS_EV
     */
    public s_xl_most_sync_volume_status mostSyncVolumeStatus;
    /**
     * C type : XL_MOST_SYNC_MUTES_STATUS_EV
     */
    public s_xl_most_sync_mutes_status mostSyncMuteStatus;
    /**
     * C type : XL_MOST_RX_LIGHT_EV
     */
    public s_xl_most_rx_light mostRxLight;
    /**
     * C type : XL_MOST_TX_LIGHT_EV
     */
    public s_xl_most_tx_light mostTxLight;
    /**
     * C type : XL_MOST_LIGHT_POWER_EV
     */
    public s_xl_most_light_power mostLightPower;
    /**
     * C type : XL_MOST_LOCK_STATUS_EV
     */
    public s_xl_most_lock_status mostLockStatus;
    /**
     * C type : XL_MOST_GEN_LIGHT_ERROR_EV
     */
    public s_xl_most_gen_light_error mostGenLightError;
    /**
     * C type : XL_MOST_GEN_LOCK_ERROR_EV
     */
    public s_xl_most_gen_lock_error mostGenLockError;
    /**
     * C type : XL_MOST_RX_BUFFER_EV
     */
    public s_xl_most_rx_buffer mostRxBuffer;
    /**
     * C type : XL_MOST_ERROR_EV
     */
    public s_xl_most_error mostError;
    /**
     * C type : XL_MOST_SYNC_PULSE_EV
     */
    public s_xl_sync_pulse_ev mostSyncPulse;
    /**
     * C type : XL_MOST_CTRL_BUSLOAD_EV
     */
    public s_xl_most_ctrl_busload mostCtrlBusload;
    /**
     * C type : XL_MOST_ASYNC_BUSLOAD_EV
     */
    public s_xl_most_async_busload mostAsyncBusload;
    /**
     * C type : XL_MOST_STREAM_STATE_EV
     */
    public s_xl_most_stream_state mostStreamState;
    /**
     * C type : XL_MOST_STREAM_BUFFER_EV
     */
    public XL_MOST_STREAM_BUFFER_EV mostStreamBuffer;
    /**
     * C type : XL_MOST_SYNC_TX_UNDERFLOW_EV
     */
    public s_xl_most_sync_tx_underflow mostSyncTxUnderflow;
    /**
     * C type : XL_MOST_SYNC_RX_OVERFLOW_EV
     */
    public s_xl_most_sync_rx_overflow mostSyncRxOverflow;

    public s_xl_most_tag_data() {
        super();
    }

    /**
     * @param mostLockStatus C type : XL_MOST_LOCK_STATUS_EV
     */
    public s_xl_most_tag_data(s_xl_most_lock_status mostLockStatus) {
        super();
        this.mostLockStatus = mostLockStatus;
        setType(s_xl_most_lock_status.class);
    }

    /**
     * @param mostSyncTxUnderflow C type : XL_MOST_SYNC_TX_UNDERFLOW_EV
     */
    public s_xl_most_tag_data(s_xl_most_sync_tx_underflow mostSyncTxUnderflow) {
        super();
        this.mostSyncTxUnderflow = mostSyncTxUnderflow;
        setType(s_xl_most_sync_tx_underflow.class);
    }

    /**
     * @param mostTimingModeSpdif C type : XL_MOST_TIMING_MODE_SPDIF_EV
     */
    public s_xl_most_tag_data(s_xl_most_timing_mode_spdif mostTimingModeSpdif) {
        super();
        this.mostTimingModeSpdif = mostTimingModeSpdif;
        setType(s_xl_most_timing_mode_spdif.class);
    }

    /**
     * @param mostSyncVolumeStatus C type : XL_MOST_SYNC_VOLUME_STATUS_EV
     */
    public s_xl_most_tag_data(s_xl_most_sync_volume_status mostSyncVolumeStatus) {
        super();
        this.mostSyncVolumeStatus = mostSyncVolumeStatus;
        setType(s_xl_most_sync_volume_status.class);
    }

    /**
     * @param mostSpecialRegister C type : XL_MOST_SPECIAL_REGISTER_EV
     */
    public s_xl_most_tag_data(s_xl_most_special_register mostSpecialRegister) {
        super();
        this.mostSpecialRegister = mostSpecialRegister;
        setType(s_xl_most_special_register.class);
    }

    /**
     * @param mostTimingMode C type : XL_MOST_TIMING_MODE_EV
     */
    public s_xl_most_tag_data(s_xl_most_timing_mode mostTimingMode) {
        super();
        this.mostTimingMode = mostTimingMode;
        setType(s_xl_most_timing_mode.class);
    }

    /**
     * @param mostGenLightError C type : XL_MOST_GEN_LIGHT_ERROR_EV
     */
    public s_xl_most_tag_data(s_xl_most_gen_light_error mostGenLightError) {
        super();
        this.mostGenLightError = mostGenLightError;
        setType(s_xl_most_gen_light_error.class);
    }

    /**
     * @param mostLightPower C type : XL_MOST_LIGHT_POWER_EV
     */
    public s_xl_most_tag_data(s_xl_most_light_power mostLightPower) {
        super();
        this.mostLightPower = mostLightPower;
        setType(s_xl_most_light_power.class);
    }

    /**
     * @param mostFrequency C type : XL_MOST_FREQUENCY_EV
     */
    public s_xl_most_tag_data(s_xl_most_frequency mostFrequency) {
        super();
        this.mostFrequency = mostFrequency;
        setType(s_xl_most_frequency.class);
    }

    /**
     * @param mostRxLight C type : XL_MOST_RX_LIGHT_EV
     */
    public s_xl_most_tag_data(s_xl_most_rx_light mostRxLight) {
        super();
        this.mostRxLight = mostRxLight;
        setType(s_xl_most_rx_light.class);
    }

    /**
     * @param mostTxLight C type : XL_MOST_TX_LIGHT_EV
     */
    public s_xl_most_tag_data(s_xl_most_tx_light mostTxLight) {
        super();
        this.mostTxLight = mostTxLight;
        setType(s_xl_most_tx_light.class);
    }

    /**
     * @param mostAsyncMsg received async frame<br>
     *                     C type : XL_MOST_ASYNC_MSG_EV
     */
    public s_xl_most_tag_data(s_xl_most_async_msg mostAsyncMsg) {
        super();
        this.mostAsyncMsg = mostAsyncMsg;
        setType(s_xl_most_async_msg.class);
    }

    /**
     * @param mostRxBuffer C type : XL_MOST_RX_BUFFER_EV
     */
    public s_xl_most_tag_data(s_xl_most_rx_buffer mostRxBuffer) {
        super();
        this.mostRxBuffer = mostRxBuffer;
        setType(s_xl_most_rx_buffer.class);
    }

    /**
     * @param mostRegisterBytes C type : XL_MOST_REGISTER_BYTES_EV
     */
    public s_xl_most_tag_data(s_xl_most_register_bytes mostRegisterBytes) {
        super();
        this.mostRegisterBytes = mostRegisterBytes;
        setType(s_xl_most_register_bytes.class);
    }

    /**
     * @param mostAsyncTx async frame tx acknowledge<br>
     *                    C type : XL_MOST_ASYNC_TX_EV
     */
    public s_xl_most_tag_data(s_xl_most_async_tx mostAsyncTx) {
        super();
        this.mostAsyncTx = mostAsyncTx;
        setType(s_xl_most_async_tx.class);
    }

    /**
     * @param mostCtrlSyncAudio C type : XL_MOST_CTRL_SYNC_AUDIO_EV
     */
    public s_xl_most_tag_data(s_xl_most_ctrl_sync_audio mostCtrlSyncAudio) {
        super();
        this.mostCtrlSyncAudio = mostCtrlSyncAudio;
        setType(s_xl_most_ctrl_sync_audio.class);
    }

    /**
     * @param mostEventSource C type : XL_MOST_EVENT_SOURCE_EV
     */
    public s_xl_most_tag_data(s_xl_most_event_source mostEventSource) {
        super();
        this.mostEventSource = mostEventSource;
        setType(s_xl_most_event_source.class);
    }

    /**
     * @param mostCtrlSpy C type : XL_MOST_CTRL_SPY_EV
     */
    public s_xl_most_tag_data(s_xl_most_ctrl_spy mostCtrlSpy) {
        super();
        this.mostCtrlSpy = mostCtrlSpy;
        setType(s_xl_most_ctrl_spy.class);
    }

    /**
     * @param mostAsyncBusload C type : XL_MOST_ASYNC_BUSLOAD_EV
     */
    public s_xl_most_tag_data(s_xl_most_async_busload mostAsyncBusload) {
        super();
        this.mostAsyncBusload = mostAsyncBusload;
        setType(s_xl_most_async_busload.class);
    }

    /**
     * @param mostError C type : XL_MOST_ERROR_EV
     */
    public s_xl_most_tag_data(s_xl_most_error mostError) {
        super();
        this.mostError = mostError;
        setType(s_xl_most_error.class);
    }

    /**
     * @param mostSyncAlloc C type : XL_MOST_SYNC_ALLOC_EV
     */
    public s_xl_most_tag_data(s_xl_most_sync_alloc mostSyncAlloc) {
        super();
        this.mostSyncAlloc = mostSyncAlloc;
        setType(s_xl_most_sync_alloc.class);
    }

    /**
     * @param mostStreamState C type : XL_MOST_STREAM_STATE_EV
     */
    public s_xl_most_tag_data(s_xl_most_stream_state mostStreamState) {
        super();
        this.mostStreamState = mostStreamState;
        setType(s_xl_most_stream_state.class);
    }

    /**
     * @param mostSyncRxOverflow C type : XL_MOST_SYNC_RX_OVERFLOW_EV
     */
    public s_xl_most_tag_data(s_xl_most_sync_rx_overflow mostSyncRxOverflow) {
        super();
        this.mostSyncRxOverflow = mostSyncRxOverflow;
        setType(s_xl_most_sync_rx_overflow.class);
    }

    /**
     * @param mostAllBypass C type : XL_MOST_ALL_BYPASS_EV
     */
    public s_xl_most_tag_data(s_xl_most_all_bypass mostAllBypass) {
        super();
        this.mostAllBypass = mostAllBypass;
        setType(s_xl_most_all_bypass.class);
    }

    /**
     * @param mostCtrlSyncAudioEx C type : XL_MOST_CTRL_SYNC_AUDIO_EX_EV
     */
    public s_xl_most_tag_data(s_xl_most_ctrl_sync_audio_ex mostCtrlSyncAudioEx) {
        super();
        this.mostCtrlSyncAudioEx = mostCtrlSyncAudioEx;
        setType(s_xl_most_ctrl_sync_audio_ex.class);
    }

    /**
     * @param mostSyncPulse C type : XL_MOST_SYNC_PULSE_EV
     */
    public s_xl_most_tag_data(s_xl_sync_pulse_ev mostSyncPulse) {
        super();
        this.mostSyncPulse = mostSyncPulse;
        setType(s_xl_sync_pulse_ev.class);
    }

    /**
     * @param mostRegisterBits C type : XL_MOST_REGISTER_BITS_EV
     */
    public s_xl_most_tag_data(s_xl_most_register_bits mostRegisterBits) {
        super();
        this.mostRegisterBits = mostRegisterBits;
        setType(s_xl_most_register_bits.class);
    }

    /**
     * @param mostCtrlBusload C type : XL_MOST_CTRL_BUSLOAD_EV
     */
    public s_xl_most_tag_data(s_xl_most_ctrl_busload mostCtrlBusload) {
        super();
        this.mostCtrlBusload = mostCtrlBusload;
        setType(s_xl_most_ctrl_busload.class);
    }

    /**
     * @param mostStreamBuffer C type : XL_MOST_STREAM_BUFFER_EV
     */
    public s_xl_most_tag_data(XL_MOST_STREAM_BUFFER_EV mostStreamBuffer) {
        super();
        this.mostStreamBuffer = mostStreamBuffer;
        setType(XL_MOST_STREAM_BUFFER_EV.class);
    }

    /**
     * @param mostGenLockError C type : XL_MOST_GEN_LOCK_ERROR_EV
     */
    public s_xl_most_tag_data(s_xl_most_gen_lock_error mostGenLockError) {
        super();
        this.mostGenLockError = mostGenLockError;
        setType(s_xl_most_gen_lock_error.class);
    }

    /**
     * @param mostCtrlMsg C type : XL_MOST_CTRL_MSG_EV
     */
    public s_xl_most_tag_data(s_xl_most_ctrl_msg mostCtrlMsg) {
        super();
        this.mostCtrlMsg = mostCtrlMsg;
        setType(s_xl_most_ctrl_msg.class);
    }

    /**
     * @param mostSyncMuteStatus C type : XL_MOST_SYNC_MUTES_STATUS_EV
     */
    public s_xl_most_tag_data(s_xl_most_sync_mutes_status mostSyncMuteStatus) {
        super();
        this.mostSyncMuteStatus = mostSyncMuteStatus;
        setType(s_xl_most_sync_mutes_status.class);
    }

    public static class ByReference extends s_xl_most_tag_data implements com.sun.jna.Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most_tag_data implements com.sun.jna.Structure.ByValue {

    }

    ;
}
