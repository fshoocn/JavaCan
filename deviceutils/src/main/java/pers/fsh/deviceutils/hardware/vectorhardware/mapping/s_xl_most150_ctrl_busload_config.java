package pers.fsh.deviceutils.hardware.vectorhardware.mapping;

import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : vxlapi.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class s_xl_most150_ctrl_busload_config extends Structure {
    public int transmissionRate;
    public int counterType;
    /**
     * counter can be only be set in the payload -> position 0 means first payload byte!
     */
    public int counterPosition;
    /**
     * C type : XLmost150CtrlTxMsg
     */
    public s_xl_most150_ctrl_tx_msg busloadCtrlMsg;

    public s_xl_most150_ctrl_busload_config() {
        super(1);
    }

    /**
     * @param counterPosition counter can be only be set in the payload -> position 0 means first payload byte!<br>
     * @param busloadCtrlMsg  C type : XLmost150CtrlTxMsg
     */
    public s_xl_most150_ctrl_busload_config(int transmissionRate, int counterType, int counterPosition, s_xl_most150_ctrl_tx_msg busloadCtrlMsg) {
        super(1);
        this.transmissionRate = transmissionRate;
        this.counterType = counterType;
        this.counterPosition = counterPosition;
        this.busloadCtrlMsg = busloadCtrlMsg;
    }

    protected List<String> getFieldOrder() {
        return Arrays.asList("transmissionRate", "counterType", "counterPosition", "busloadCtrlMsg");
    }

    public static class ByReference extends s_xl_most150_ctrl_busload_config implements Structure.ByReference {

    }

    ;

    public static class ByValue extends s_xl_most150_ctrl_busload_config implements Structure.ByValue {

    }

    ;
}
